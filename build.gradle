plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'com.kosta268'
version = '0.0.1-SNAPSHOT'

java {
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // JSON Web Token
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"


    //AKIAZBUM6HMJPIQ4B25R  -> ACCESKEY
    //zy8QTMHd7c08Oc/iigwW8IzUPCM26dUKbLo0kVLo -> SECRETKEY


//    spring.servlet.multipart.max-file-size=10MB
//    spring.servlet.multipart.max-request-size=10MB

    // 개발용 경량화 데이터베이스
    runtimeOnly 'com.h2database:h2'
    // 소스 코드 내용 변경시 서버 재시작 없이 서버가 자동으로 재시작해주는 라이브러리
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // getter, setter, 생성자를 자동으로 만들어주는 라이브러리
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    // Amazon S3 관련
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

// QueryDSL
sourceSets {
    main {
        java {
            srcDir file('src/main/java')
            srcDir file('build/generated')
        }
    }
}
clean.doLast {
    delete fileTree('build/generated')
}


tasks.named('test') {
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(17)
}
